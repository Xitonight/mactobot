// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Chat {
  id                     BigInt   @id @unique
  welcomeEnabled         Boolean  @default(true)
  welcomeMessageText     String?
  welcomeMessageMedia    String?
  goodbyeEnabled         Boolean  @default(true)
  goodbyeMessageText     String?
  goodbyeMessageMedia    String?
  language               String   @default("en")
  serviceMessagesToClean String[] @default([])

  users UserInChat[]
  roles Role[]
}

model User {
  id       BigInt  @id @unique
  username String?

  chats UserInChat[]
}

model UserInChat {
  userId   BigInt
  chatId   BigInt
  roleId   BigInt?
  joinDate DateTime? @default(now())

  user User  @relation(fields: [userId], references: [id])
  chat Chat  @relation(fields: [chatId], references: [id])
  role Role? @relation(fields: [roleId], references: [id])

  @@id([userId, chatId])
}

model Role {
  id     BigInt       @id @default(autoincrement())
  name   String       @unique
  chatId BigInt
  users  UserInChat[]

  chat Chat @relation(fields: [chatId], references: [id])
}
